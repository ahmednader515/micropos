"use strict";(()=>{var e={};e.id=695,e.ids=[695],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},25436:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>v,originalPathname:()=>y,patchFetch:()=>f,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l,staticGenerationBailout:()=>h});var o={};t.r(o),t.d(o,{GET:()=>u});var n=t(95419),i=t(69108),s=t(99678),a=t(78070),c=t(9108);async function u(){if(!process.env.DATABASE_URL)return a.Z.json({products:[]});try{await c._.$connect();let e=await c._.product.findMany({include:{category:{select:{id:!0,name:!0}}},orderBy:{createdAt:"desc"}});return a.Z.json({products:e.map(e=>({...e,price:Number(e.price),costPrice:Number(e.costPrice)}))})}catch(e){if(console.error("Error fetching products:",e),!process.env.DATABASE_URL)return a.Z.json({products:[]});return a.Z.json({error:"Failed to fetch products"},{status:500})}finally{await c._.$disconnect()}}let p=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/products/inventory/route",pathname:"/api/products/inventory",filename:"route",bundlePath:"app/api/products/inventory/route"},resolvedPagePath:"C:\\Users\\PC\\Desktop\\micropos\\app\\api\\products\\inventory\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:d,staticGenerationAsyncStorage:l,serverHooks:m,headerHooks:v,staticGenerationBailout:h}=p,y="/api/products/inventory/route";function f(){return(0,s.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}},9108:(e,r,t)=>{t.d(r,{_:()=>n});let o=require("@prisma/client"),n=globalThis.prisma??new o.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[638,206],()=>t(25436));module.exports=o})();